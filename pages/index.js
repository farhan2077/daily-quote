import Head from "next/head";
import { Dialog, Transition } from "@headlessui/react";
import { Fragment, useState } from "react";

export default function Home({ data }) {
  return (
    <div>
      <Head>
        <title>Daily Quote</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Modal />
      <main className="flex items-center justify-center bg-gradient">
        <div className="mx-10 lg:container lg:px-80">
          <p className="text-4xl lg:text-[6rem] text-slate-800 mb-2 lg:mb-8">
            &#10075;&#10075;
          </p>
          <p className="font-serif text-2xl font-bold lg:text-6xl text-slate-800">
            {data[0].q}
          </p>
          <p className="mt-5 text-lg tracking-tight uppercase text-slate-800 lg:mt-12 lg:text-4xl font-sans-serif">
            -&nbsp;{data[0].a}
          </p>
        </div>
      </main>
    </div>
  );
}

function Modal() {
  let [isOpen, setIsOpen] = useState(false);

  function closeModal() {
    setIsOpen(false);
  }

  function openModal() {
    setIsOpen(true);
  }

  return (
    <>
      <div className="fixed bottom-0 right-0 z-10 m-5 md:m-8">
        <button type="button" onClick={openModal}>
          {/* information icon */}
          <svg
            xmlns="http://www.w3.org/2000/svg"
            className="w-6 h-6 text-slate-600"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            strokeWidth={2}
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
            />
          </svg>
        </button>
      </div>

      <Transition appear show={isOpen} as={Fragment}>
        <Dialog as="div" className="relative z-10" onClose={closeModal}>
          <Transition.Child
            as={Fragment}
            enter="ease-out duration-300"
            enterFrom="opacity-0"
            enterTo="opacity-100"
            leave="ease-in duration-200"
            leaveFrom="opacity-100"
            leaveTo="opacity-0"
          >
            <div className="fixed inset-0 bg-black bg-opacity-20 blur-md" />
          </Transition.Child>

          <div className="fixed inset-0 overflow-y-auto font-sans-serif">
            <div className="flex items-center justify-center min-h-full p-4 text-center">
              <Transition.Child
                as={Fragment}
                enter="ease-out duration-300"
                enterFrom="opacity-0 scale-95"
                enterTo="opacity-100 scale-100"
                leave="ease-in duration-200"
                leaveFrom="opacity-100 scale-100"
                leaveTo="opacity-0 scale-95"
              >
                <Dialog.Panel className="w-full max-w-md p-6 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-2xl">
                  <Dialog.Title
                    as="h3"
                    className="text-lg font-medium leading-6 text-gray-900"
                  >
                    Made by <span className="">Farhan</span>
                  </Dialog.Title>
                  <div className="mt-2">
                    <p className="text-sm text-gray-500">
                      Inspirational quotes provided by{" "}
                      <a
                        href="https://zenquotes.io/"
                        target="_blank"
                        rel="noreferrer"
                      >
                        ZenQuotes API
                      </a>
                    </p>
                  </div>

                  <div className="mt-4">
                    <button
                      type="button"
                      className="inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md focus:outline-none hover:bg-blue-200 focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2"
                      onClick={closeModal}
                    >
                      Got it
                    </button>
                  </div>
                </Dialog.Panel>
              </Transition.Child>
            </div>
          </div>
        </Dialog>
      </Transition>
    </>
  );
}

export async function getStaticProps() {
  const res = await fetch("https://zenquotes.io/api/today");
  const data = await res.json();

  return {
    props: {
      data,
    },
    revalidate: 86400, // 1 day = 86400 seconds
  };
}
